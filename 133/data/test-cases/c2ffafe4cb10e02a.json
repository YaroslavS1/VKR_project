{
  "uid" : "c2ffafe4cb10e02a",
  "name" : "test_create_adv_compaign[8000-30.05.2010-01.01.2010]",
  "fullName" : "apps.home.tests_vkr.visualization.test_distribution#test_create_adv_compaign",
  "historyId" : "1c930db461be78a67b0d0378e8f1c181",
  "time" : {
    "start" : 1652893600737,
    "stop" : 1652893600830,
    "duration" : 93
  },
  "description" : "draw a distribution schedule as part of an advertising campaign",
  "descriptionHtml" : "<p>draw a distribution schedule as part of an advertising campaign</p>\n",
  "status" : "broken",
  "statusMessage" : "NameError: name 'tempfile' is not defined",
  "statusTrace" : "start_date = '01.01.2010', end_date = '30.05.2010', sum_cost = 8000\n\n    @allure.feature('Distributions')\n    @allure.story('Test draws a graph with the main indicators of an advertising campaign')\n    @pytest.mark.parametrize('start_date', ['01.01.2010'])\n    @pytest.mark.parametrize('end_date', ['30.05.2010'])\n    @pytest.mark.parametrize('sum_cost', [8000])\n    def test_create_adv_compaign(start_date, end_date, sum_cost):\n        \"\"\"draw a distribution schedule as part of an advertising campaign\"\"\"\n        a = AdvCampaign(\n            name='Test campain',\n            start_date=start_date,\n            end_date=end_date,\n            sum_cost=sum_cost\n        )\n        statistic_date = []\n        statistic_cost = []\n        statistic_clicks = []\n        statistic_impressions = []\n        statistic_cpc = []\n        for i in a.campaign:\n            statistic_date.append(i.date)\n            statistic_cost.append(i.cost)\n            statistic_impressions.append(i.impressions)\n            statistic_cpc.append(i.avg_cpc)\n            statistic_clicks.append(i.clicks)\n    \n        # FIXME\n        fig = make_subplots(specs=[[{\"secondary_y\": True}]])\n        fig.add_trace(go.Scatter(x=statistic_date, y=statistic_cpc,\n                                 mode='lines',\n                                 name='cpc',\n                                 ), secondary_y=True,)\n        fig.add_trace(go.Bar(x=statistic_date, y=statistic_cost, name='cost'))\n        fig.add_trace(go.Bar(x=statistic_date, y=statistic_clicks, name='clicks'))\n        fig.add_trace(go.Bar(x=statistic_date, y=statistic_impressions, name='impressions'))\n        #\n        # fig.show()\n    \n        assert (sum(statistic_cost) - sum_cost) < 1e-4\n>       temp = tempfile.NamedTemporaryFile()\nE       NameError: name 'tempfile' is not defined\n\napps/home/tests_vkr/visualization/test_distribution.py:47: NameError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Distributions"
  }, {
    "name" : "story",
    "value" : "Test draws a graph with the main indicators of an advertising campaign"
  }, {
    "name" : "parentSuite",
    "value" : "apps.home.tests_vkr.visualization"
  }, {
    "name" : "suite",
    "value" : "test_distribution"
  }, {
    "name" : "host",
    "value" : "fv-az397-334"
  }, {
    "name" : "thread",
    "value" : "2503-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "apps.home.tests_vkr.visualization.test_distribution"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "end_date",
    "value" : "'30.05.2010'"
  }, {
    "name" : "start_date",
    "value" : "'01.01.2010'"
  }, {
    "name" : "sum_cost",
    "value" : "8000"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 7,
        "unknown" : 0,
        "total" : 8
      },
      "items" : [ {
        "uid" : "e7f2a9d7a8d4b148",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/132//#testresult/e7f2a9d7a8d4b148",
        "status" : "passed",
        "time" : {
          "start" : 1652891600684,
          "stop" : 1652891600688,
          "duration" : 4
        }
      }, {
        "uid" : "19e13b79d7ec7a36",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/131//#testresult/19e13b79d7ec7a36",
        "status" : "passed",
        "time" : {
          "start" : 1652888100513,
          "stop" : 1652888100516,
          "duration" : 3
        }
      }, {
        "uid" : "1d5be29cb5c71213",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/130//#testresult/1d5be29cb5c71213",
        "status" : "passed",
        "time" : {
          "start" : 1652887986581,
          "stop" : 1652887986584,
          "duration" : 3
        }
      }, {
        "uid" : "c69f54943f4807e",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/129//#testresult/c69f54943f4807e",
        "status" : "passed",
        "time" : {
          "start" : 1652885581269,
          "stop" : 1652885581272,
          "duration" : 3
        }
      }, {
        "uid" : "7b5a1e7cc279e0de",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/128//#testresult/7b5a1e7cc279e0de",
        "status" : "passed",
        "time" : {
          "start" : 1652881946932,
          "stop" : 1652881946935,
          "duration" : 3
        }
      }, {
        "uid" : "a537b5d1369a74ef",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/127//#testresult/a537b5d1369a74ef",
        "status" : "passed",
        "time" : {
          "start" : 1652880882326,
          "stop" : 1652880882330,
          "duration" : 4
        }
      }, {
        "uid" : "8afee6a7d3fe6d19",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/125//#testresult/8afee6a7d3fe6d19",
        "status" : "passed",
        "time" : {
          "start" : 1651871471161,
          "stop" : 1651871471164,
          "duration" : 3
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "c2ffafe4cb10e02a.json",
  "parameterValues" : [ "'30.05.2010'", "'01.01.2010'", "8000" ]
}