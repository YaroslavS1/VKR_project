{
  "uid" : "a2388d36b580e86",
  "name" : "test_conformity_many[rambler-rambler_1-avito-avito_1-vk-vk_2-vk-vk_1-yandex-yandex_direct2-yandex-yandex_direct1-450-profit60-700-profit50-900-profit40-6000-profit30-450-profit20-200-profit10-25.05.2020-30.10.2021]",
  "fullName" : "apps.home.tests_vkr.generator.test_conformity_re_many#test_conformity_many",
  "historyId" : "cf67eacfa3e8eee03172643016668327",
  "time" : {
    "start" : 1652576373035,
    "stop" : 1652576373491,
    "duration" : 456
  },
  "status" : "broken",
  "statusMessage" : "OSError: Cannot save file into a non-existent directory: '/home/y_sukhorukov/VKR/VKR_PROJECT/tests'",
  "statusTrace" : "start_date = '25.05.2020', end_date = '30.10.2021', source1 = 'yandex'\nname1 = 'yandex_direct1', profit1 = (1876, 5000), clicks1 = 200\nsource2 = 'yandex', name2 = 'yandex_direct2', profit2 = (5678, 9090)\nclicks2 = 450, source3 = 'vk', name3 = 'vk_1', profit3 = (10876, 90000)\nclicks3 = 6000, source4 = 'vk', name4 = 'vk_2', profit4 = (1800, 1800)\nclicks4 = 900, source5 = 'avito', name5 = 'avito_1', profit5 = (98760, 5000)\nclicks5 = 700, source6 = 'rambler', name6 = 'rambler_1'\nprofit6 = (56798, 78000), clicks6 = 450\n\n    @allure.feature('CRM_ADV')\n    @allure.story('Test compliance of the report and the advertising company')\n    @pytest.mark.parametrize('end_date', ['30.10.2021'])\n    @pytest.mark.parametrize('start_date', ['25.05.2020'])\n    @pytest.mark.parametrize('profit1', [(1876, 5000)])\n    @pytest.mark.parametrize('clicks1', [200])\n    @pytest.mark.parametrize('profit2', [(5678, 9090)])\n    @pytest.mark.parametrize('clicks2', [450])\n    @pytest.mark.parametrize('profit3', [(10876, 90000)])\n    @pytest.mark.parametrize('clicks3', [6000])\n    @pytest.mark.parametrize('profit4', [(1800, 1800)])\n    @pytest.mark.parametrize('clicks4', [900])\n    @pytest.mark.parametrize('profit5', [(98760, 5000)])\n    @pytest.mark.parametrize('clicks5', [700])\n    @pytest.mark.parametrize('profit6', [(56798, 78000)])\n    @pytest.mark.parametrize('clicks6', [450])\n    @pytest.mark.parametrize('name1', ['yandex_direct1'])\n    @pytest.mark.parametrize('source1', ['yandex'])\n    @pytest.mark.parametrize('name2', ['yandex_direct2'])\n    @pytest.mark.parametrize('source2', ['yandex'])\n    @pytest.mark.parametrize('name3', ['vk_1'])\n    @pytest.mark.parametrize('source3', ['vk'])\n    @pytest.mark.parametrize('name4', ['vk_2'])\n    @pytest.mark.parametrize('source4', ['vk'])\n    @pytest.mark.parametrize('name5', ['avito_1'])\n    @pytest.mark.parametrize('source5', ['avito'])\n    @pytest.mark.parametrize('name6', ['rambler_1'])\n    @pytest.mark.parametrize('source6', ['rambler'])\n    def test_conformity_many(start_date, end_date,\n                             source1, name1, profit1, clicks1,\n                             source2, name2, profit2, clicks2,\n                             source3, name3, profit3, clicks3,\n                             source4, name4, profit4, clicks4,\n                             source5, name5, profit5, clicks5,\n                             source6, name6, profit6, clicks6,\n                             ):\n        # pytest.skip(f'Not suitable for CI')\n        adv_list = (\n            AdvContextCRM(source1, name1, profit1[1], clicks1),\n            AdvContextCRM(source2, name2, profit2[1], clicks2),\n            AdvContextCRM(source3, name3, profit3[1], clicks3),\n            AdvContextCRM(source4, name4, profit4[1], clicks4),\n            AdvContextCRM(source5, name5, profit5[1], clicks5),\n            AdvContextCRM(source6, name6, profit6[1], clicks6)\n        )\n        crm_report = CrmReport(\n            start_date=start_date,\n            end_date=end_date,\n            config=adv_list)\n    \n        adv_1 = AdvCampaign(\n            name=name1,\n            start_date=start_date,\n            end_date=end_date,\n            sum_cost=profit1[0],\n            source=source1,\n            allocation=crm_report.allocation[(source1, name1)])\n        adv_2 = AdvCampaign(\n            name=name2,\n            start_date=start_date,\n            end_date=end_date,\n            sum_cost=profit2[0],\n            source=source2,\n            allocation=crm_report.allocation[(source2, name2)])\n        adv_3 = AdvCampaign(\n            name=name3,\n            start_date=start_date,\n            end_date=end_date,\n            sum_cost=profit3[0],\n            source=source3,\n            allocation=crm_report.allocation[(source3, name3)])\n        adv_4 = AdvCampaign(\n            name=name4,\n            start_date=start_date,\n            end_date=end_date,\n            sum_cost=profit4[0],\n            source=source4,\n            allocation=crm_report.allocation[(source4, name4)])\n        adv_5 = AdvCampaign(\n            name=name5,\n            start_date=start_date,\n            end_date=end_date,\n            sum_cost=profit5[0],\n            source=source5,\n            allocation=crm_report.allocation[(source5, name5)])\n        adv_6 = AdvCampaign(\n            name=name6,\n            start_date=start_date,\n            end_date=end_date,\n            sum_cost=profit6[0],\n            source=source6,\n            allocation=crm_report.allocation[(source6, name6)])\n    \n        data_frame = pd.DataFrame(crm_report.as_dict)\n>       data_frame.to_csv('/home/y_sukhorukov/VKR/VKR_PROJECT/tests/DEMO.csv')\n\napps/home/tests_vkr/generator/test_conformity_re_many.py:106: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/pandas/core/generic.py:3551: in to_csv\n    return DataFrameRenderer(formatter).to_csv(\n/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/pandas/io/formats/format.py:1180: in to_csv\n    csv_formatter.save()\n/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/pandas/io/formats/csvs.py:241: in save\n    with get_handle(\n/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/pandas/io/common.py:697: in get_handle\n    check_parent_directory(str(handle))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npath = '/home/y_sukhorukov/VKR/VKR_PROJECT/tests/DEMO.csv'\n\n    def check_parent_directory(path: Path | str) -> None:\n        \"\"\"\n        Check if parent directory of a file exists, raise OSError if it does not\n    \n        Parameters\n        ----------\n        path: Path or str\n            Path to check parent directory of\n    \n        \"\"\"\n        parent = Path(path).parent\n        if not parent.is_dir():\n>           raise OSError(rf\"Cannot save file into a non-existent directory: '{parent}'\")\nE           OSError: Cannot save file into a non-existent directory: '/home/y_sukhorukov/VKR/VKR_PROJECT/tests'\n\n/opt/hostedtoolcache/Python/3.10.4/x64/lib/python3.10/site-packages/pandas/io/common.py:571: OSError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Test compliance of the report and the advertising company"
  }, {
    "name" : "feature",
    "value" : "CRM_ADV"
  }, {
    "name" : "parentSuite",
    "value" : "apps.home.tests_vkr.generator"
  }, {
    "name" : "suite",
    "value" : "test_conformity_re_many"
  }, {
    "name" : "host",
    "value" : "fv-az210-147"
  }, {
    "name" : "thread",
    "value" : "2337-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "apps.home.tests_vkr.generator.test_conformity_re_many"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "clicks1",
    "value" : "200"
  }, {
    "name" : "clicks2",
    "value" : "450"
  }, {
    "name" : "clicks3",
    "value" : "6000"
  }, {
    "name" : "clicks4",
    "value" : "900"
  }, {
    "name" : "clicks5",
    "value" : "700"
  }, {
    "name" : "clicks6",
    "value" : "450"
  }, {
    "name" : "end_date",
    "value" : "'30.10.2021'"
  }, {
    "name" : "name1",
    "value" : "'yandex_direct1'"
  }, {
    "name" : "name2",
    "value" : "'yandex_direct2'"
  }, {
    "name" : "name3",
    "value" : "'vk_1'"
  }, {
    "name" : "name4",
    "value" : "'vk_2'"
  }, {
    "name" : "name5",
    "value" : "'avito_1'"
  }, {
    "name" : "name6",
    "value" : "'rambler_1'"
  }, {
    "name" : "profit1",
    "value" : "(1876, 5000)"
  }, {
    "name" : "profit2",
    "value" : "(5678, 9090)"
  }, {
    "name" : "profit3",
    "value" : "(10876, 90000)"
  }, {
    "name" : "profit4",
    "value" : "(1800, 1800)"
  }, {
    "name" : "profit5",
    "value" : "(98760, 5000)"
  }, {
    "name" : "profit6",
    "value" : "(56798, 78000)"
  }, {
    "name" : "source1",
    "value" : "'yandex'"
  }, {
    "name" : "source2",
    "value" : "'yandex'"
  }, {
    "name" : "source3",
    "value" : "'vk'"
  }, {
    "name" : "source4",
    "value" : "'vk'"
  }, {
    "name" : "source5",
    "value" : "'avito'"
  }, {
    "name" : "source6",
    "value" : "'rambler'"
  }, {
    "name" : "start_date",
    "value" : "'25.05.2020'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "a2388d36b580e86.json",
  "parameterValues" : [ "200", "450", "6000", "900", "700", "450", "'30.10.2021'", "'yandex_direct1'", "'yandex_direct2'", "'vk_1'", "'vk_2'", "'avito_1'", "'rambler_1'", "(1876, 5000)", "(5678, 9090)", "(10876, 90000)", "(1800, 1800)", "(98760, 5000)", "(56798, 78000)", "'yandex'", "'yandex'", "'vk'", "'vk'", "'avito'", "'rambler'", "'25.05.2020'" ]
}