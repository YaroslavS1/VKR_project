{
  "uid" : "d2aee95f5aa36cef",
  "name" : "test_create_adv_compaign[8000-30.01.2010-01.01.2010]",
  "fullName" : "tests_vkr.visualization.test_distribution#test_create_adv_compaign",
  "historyId" : "5d2bcf5ec48a9a686d62f9960d6d9fe8",
  "time" : {
    "start" : 1651382446766,
    "stop" : 1651382446769,
    "duration" : 3
  },
  "description" : "draw a distribution schedule as part of an advertising campaign",
  "descriptionHtml" : "<p>draw a distribution schedule as part of an advertising campaign</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 7999.999999999998 == 8000\n +  where 7999.999999999998 = sum([846.15, 613.81, 724.25, 96.85, 64.55, 332.57, ...])",
  "statusTrace" : "start_date = '01.01.2010', end_date = '30.01.2010', sum_cost = 8000\n\n    @allure.feature('Distributions')\n    @allure.story('Test draws a graph with the main indicators of an advertising campaign')\n    @pytest.mark.parametrize('start_date', ['01.01.2010'])\n    @pytest.mark.parametrize('end_date', ['30.01.2010'])\n    @pytest.mark.parametrize('sum_cost', [8000])\n    def test_create_adv_compaign(start_date, end_date, sum_cost):\n        \"\"\"draw a distribution schedule as part of an advertising campaign\"\"\"\n        a = AdvCampaign(\n            name='Test campain',\n            start_date=start_date,\n            end_date=end_date,\n            sum_cost=sum_cost\n        )\n        statistic_date = []\n        statistic_cost = []\n        statistic_clicks = []\n        statistic_impressions = []\n        statistic_cpc = []\n        for i in a.campaign:\n            statistic_date.append(i.date)\n            statistic_cost.append(i.cost)\n            statistic_impressions.append(i.impressions)\n            statistic_cpc.append(i.avg_cpc)\n            statistic_clicks.append(i.clicks)\n    \n        # FIXME\n        # fig = make_subplots(specs=[[{\"secondary_y\": True}]])\n        # fig.add_trace(go.Scatter(x=statistic_date, y=statistic_cpc,\n        #                          mode='lines',\n        #                          name='cpc',\n        #                          ), secondary_y=True,)\n        # fig.add_trace(go.Bar(x=statistic_date, y=statistic_cost, name='cost'))\n        # fig.add_trace(go.Bar(x=statistic_date, y=statistic_clicks, name='clicks'))\n        # fig.add_trace(go.Bar(x=statistic_date, y=statistic_impressions, name='impressions'))\n        #\n        # fig.show()\n    \n        # temp = tempfile.NamedTemporaryFile()\n        # fig.write_html(f'{temp.name}')\n        # allure.attach.file(f'{temp.name}', attachment_type=allure.attachment_type.HTML)\n>       assert sum(statistic_cost) == sum_cost\nE       assert 7999.999999999998 == 8000\nE        +  where 7999.999999999998 = sum([846.15, 613.81, 724.25, 96.85, 64.55, 332.57, ...])\n\ntests_vkr/visualization/test_distribution.py:51: AssertionError",
  "flaky" : false,
  "newFailed" : true,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "Test draws a graph with the main indicators of an advertising campaign"
  }, {
    "name" : "feature",
    "value" : "Distributions"
  }, {
    "name" : "parentSuite",
    "value" : "tests_vkr.visualization"
  }, {
    "name" : "suite",
    "value" : "test_distribution"
  }, {
    "name" : "host",
    "value" : "fv-az72-668"
  }, {
    "name" : "thread",
    "value" : "2302-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests_vkr.visualization.test_distribution"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "end_date",
    "value" : "'30.01.2010'"
  }, {
    "name" : "start_date",
    "value" : "'01.01.2010'"
  }, {
    "name" : "sum_cost",
    "value" : "8000"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 4,
        "unknown" : 0,
        "total" : 5
      },
      "items" : [ {
        "uid" : "7ab7d71c7004281d",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/108//#testresult/7ab7d71c7004281d",
        "status" : "passed",
        "time" : {
          "start" : 1651333956756,
          "stop" : 1651333956759,
          "duration" : 3
        }
      }, {
        "uid" : "1db70d25e1086f31",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/106//#testresult/1db70d25e1086f31",
        "status" : "passed",
        "time" : {
          "start" : 1651330791629,
          "stop" : 1651330791630,
          "duration" : 1
        }
      }, {
        "uid" : "91f611c9249ead16",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/105//#testresult/91f611c9249ead16",
        "status" : "passed",
        "time" : {
          "start" : 1651330317948,
          "stop" : 1651330317950,
          "duration" : 2
        }
      }, {
        "uid" : "94375b98a094fe89",
        "reportUrl" : "https://YaroslavS1.github.io/VKR_project/104//#testresult/94375b98a094fe89",
        "status" : "passed",
        "time" : {
          "start" : 1651330269534,
          "stop" : 1651330269536,
          "duration" : 2
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "d2aee95f5aa36cef.json",
  "parameterValues" : [ "'30.01.2010'", "'01.01.2010'", "8000" ]
}