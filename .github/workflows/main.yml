name: CI
on: [push, pull_request]


jobs:
  Smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Smoke test
        run: |
          python -m pytest apps/home/tests_vkr/generator --alluredir=allure-results
          python -m pytest apps/home/tests_vkr/basic_functionality --alluredir=allure-results
          python -m pytest apps/home/tests_vkr/visualization --alluredir=allure-results
          python -m pytest apps/home/tests_vkr/models --alluredir=allure-results
          python -m pytest apps/home/tests_vkr/Internal_API --alluredir=allure-results
          python -m pytest apps/home/tests_vkr/core --alluredir=allure-results

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          allure_history: allure-history
#          subfolder: VKR_project
#          keep_reports: 20

      - name: Deploy to Branch
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          EXTERNAL_REPOSITORY: YaroslavS1/YaroslavS1.github.io
          PUBLISH_BRANCH: gh_pages
          PUBLISH_DIR: allure-history
          destination_dir: ./VKR_project

      - name: Post the link to the report
        if: always()
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'Test report'
          state: 'success'
          sha: ${{github.event.pull_request.head.sha || github.sha}}
          target_url: https://yaroslavs1.github.io/VKR_project/${{ github.run_number }}/

  mypy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [Smoke]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Mypy
        run: |
            time sleep 35
            python -m pytest apps/home/tests_vkr/fast_

  flake8:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [Smoke]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Flake8
        run: |
          time sleep 21
          python -m pytest apps/home/tests_vkr/fast_

  Advanced-crm-test-case-creation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [mypy, flake8]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Unittest
        run: |
          time sleep 200
          python -m pytest apps/home/tests_vkr/fast_

  Models-and-basic-functions:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [mypy, flake8, Advanced-crm-test-case-creation]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Unittest
        run: |
          time sleep 342
          python -m pytest apps/home/tests_vkr/fast_

#  Synthetic-test:
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    needs: [mypy, flake8, Models-and-basic-functions]
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v2
#
#      # Setup Python (faster than using Python container)
#      - name: Setup Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: "3.x"
#
#      - name: Install requirements
#        run: |
#          python -m pip install -r requirements.txt
#      - id: cache-pipenv
#        uses: actions/cache@v1
#        with:
#          path: ~/.local/share/virtualenvs
#          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
#      - name: Unittest
#        run: |
#          time sleep 220
#          python -m pytest -v vkr_project_tests/test_generator.py
#      - name: coverage
#        run: |
#          pytest vkr_project_tests/test_generator.py --cov=vkr_project
          

  KPI-calculation-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [mypy, flake8, Advanced-crm-test-case-creation]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install requirements
        run: |
          python -m pip install -r requirements.txt
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
      - name: Unittest
        run: |
          time sleep 281
          python -m pytest apps/home/tests_vkr/fast_

#  Sphinx:
#    runs-on: ubuntu-latest
#    timeout-minutes: 10
#    steps:
#      - name: Check out repository code
#        uses: actions/checkout@v2
#
#      # Setup Python (faster than using Python container)
#      - name: Setup Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: "3.x"
#
#      - name: Install requirements
#        run: |
#          python -m pip install -r requirements.txt
#      - id: cache-pipenv
#        uses: actions/cache@v1
#        with:
#          path: ~/.local/share/virtualenvs
#          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
#      - name: Unittest
#        run: |
#          time sleep 40
#          python -m pytest -v vkr_project_tests/test_generator.py
